---
# tasks file for ansible-virtualization-guest

- name: ansible-virtualization-guest | download vagrant-cloud isos
  get_url:
    url: "{{ box.url }}"
    dest: "/tmp/{{ box.name }}.tar"
    mode: '0740'
  loop: "{{ virtualization_guest_boxes }}"
  delegate_to: 127.0.0.1
  loop_control:
    loop_var: box

- name: "ansible-virtualization-guest | copy {{ box.name }}.tar to remote"
  copy:
    src: "/tmp/{{ box.name }}.tar"
    dest: "/tmp/{{ box.name }}.tar"
  loop: "{{ virtualization_guest_boxes }}"
  loop_control:
    loop_var: box

- name: "ansible-virtualization-guest | Extract {{ box.name }}.tar into libvirt images folder"
  # unarchive:
    # src: "/tmp/{{ box.name }}.tar"
    # exclude:
      # - Vagrantfile
      # - metadata.json
    # remote_src: true # TODO better to have it locally
    # dest: "/var/lib/libvirt/images"
    # extra_opts:
      # - "-C {{ box.name }}.img"
  shell:
    cmd: "tar -xvf {{ box.name }}.tar box.img && mv box.img /var/lib/libvirt/images/{{ box.name }}.img" # noqa 303
    creates: "/var/lib/libvirt/images/{{ box.name }}.img"
    chdir: "/tmp"
    warn: no
  become: yes
  loop: "{{ virtualization_guest_boxes }}"
  loop_control:
    loop_var: box

- name: ansible-virtualization-guest | touch vm log file
  file:
    path: "{{ libvirt_vm_default_console_log_dir }}/{{ vm.name }}.log"
    state: touch
  loop: "{{ libvirt_vms }}"
    loop_control:
      loop_var: vm

- name: ansible-virtualization-guest | run vms
  import_role:
    name: stackhpc.libvirt-vm
  become: true

- name: Get current user.
  command: whoami
  changed_when: false
  become: false
  register: whoami

- name: Add libvirt group to current user
  user:
    name: "{{ item.stdout }}"
    groups: libvirt
    append: yes
  become: true
  with_items:
    - "{{ whoami }}"

- name: ansible-virtualization-guest | check ifconfig
  command: "ifconfig -a"
  register: nicconfig
  changed_when: false

- name: ansible-virtualization-guest | debug nicconfig
  debug:
    var: nicconfig
    verbosity: 2

- name: ansible-virtualization-guest | loop over vms
  include_tasks: vm.yml
  loop: "{{ libvirt_vms }}"
  loop_control:
    loop_var: vm
