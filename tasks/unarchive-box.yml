---
- name: ansible-virtualization-guest | unarchive-box | Check for vagrantbox files existance
  ansible.builtin.stat:
    path: "/var/lib/libvirt/images/{{ virtualmachine.name }}.img"
  register: vagrantboxexists
  become: true

- name: ansible-virtualization-guest | unarchive-box | make image directories
  become: true
  with_items:
    - "/var/lib/libvirt/images"
  ansible.builtin.file:
    state: directory
    dest: '{{ item }}'
    mode: "0755"

- name: "ansible-virtualization-guest | unarchive-box | Extract {{ virtualmachine.name }}.tar into libvirt images folder"
  ansible.builtin.unarchive:
    src: "{{ virtualmachine.url }}"
    exclude:
      - Vagrantfile
      - metadata.json
    dest: "{{ isosTempRemoteDirectory.path }}"
    remote_src: yes
    creates: "{{ isosTempRemoteDirectory.path }}/box.img"
  when: not vagrantboxexists.stat.exists

- name: ansible-virtualization-guest | unarchive-box | Copy vagrantbox file if it does not exist
  ansible.builtin.copy:
    src: "{{ isosTempRemoteDirectory.path }}/box.img"
    dest: "/var/lib/libvirt/images/{{ virtualmachine.name }}.img"
    remote_src: yes
    mode: 0640
  when: not vagrantboxexists.stat.exists
  become: true

- name: ansible-virtualization-guest | unarchive-box | Remove vagrantbox file
  ansible.builtin.file:
    path: "{{ isosTempRemoteDirectory.path }}/box.img"
    state: absent
  when: not vagrantboxexists.stat.exists
  become: true
