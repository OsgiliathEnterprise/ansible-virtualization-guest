---

- name: ansible-virtualization-guest | delete-vm | get the network facts
  community.libvirt.virt_net:
    command: facts
  become: true
  register: virsh_net_facts

- name: ansible-virtualization-guest | delete-vm | Debug virsh netinfo
  ansible.builtin.debug:
    var: virsh_net_facts
    verbosity: 1

- name: ansible-virtualization-guest | delete-vm | extract machine net info
  vars:
    query: "[?hostname == '{{ vm.name.split(\".\")[0] | lower }}' ]"
  ansible.builtin.debug:
    msg: "{{ virsh_net_facts.ansible_facts.ansible_libvirt_networks.default.dhcp_leases | json_query(query) }}"
  register: currentvm_to_delete_infos

- name: ansible-virtualization-guest | delete-vm | Debug virsh netinfo
  ansible.builtin.debug:
    var: currentvm_to_delete_infos
    verbosity: 1

- name: ansible-virtualization-guest | delete-vm | remove dhcp host configuration
  ansible.builtin.command: "virsh net-update default delete ip-dhcp-host \"<host mac='{{ currentvm_to_delete_infos.msg.0.mac }}' id='{{ currentvm_to_delete_infos.msg.0.clientid }}' name='{{ vm.name }}' ip='{{ currentvm_to_delete_infos.msg.0.ipaddr }}'/>\""
  changed_when: false
  failed_when: false
  when: currentvm_to_delete_infos.msg and currentvm_to_delete_infos.msg | length > 0
  become: true

- name: ansible-virtualization-guest | delete-vm | remove firewalld rich rule for tcp
  ansible.posix.firewalld:
    rich_rule: "rule family=ipv4 forward-port port={{ vm.ssh_port_on_host }} protocol=tcp to-port=22 to-addr={{ currentvm_to_delete_infos.msg.0.ipaddr }} log prefix=ssh-to-guest-{{ vm.name }}-tcp"
    zone: public
    permanent: yes
    immediate: yes
    state: disabled
  when: currentvm_to_delete_infos.msg and currentvm_to_delete_infos.msg | length > 0
  become: true

- name: ansible-virtualization-guest | delete-vm | remove firewalld rich rule for udp
  ansible.posix.firewalld:
    rich_rule: "rule family=ipv4 forward-port port={{ vm.ssh_port_on_host }} protocol=udp to-port=22 to-addr={{ currentvm_to_delete_infos.msg.0.ipaddr }} log prefix=ssh-to-guest-{{ vm.name }}-udp"
    zone: public
    permanent: yes
    immediate: yes
    state: disabled
  when: currentvm_to_delete_infos.msg and currentvm_to_delete_infos.msg | length > 0
  become: true

- name: ansible-virtualization-guest | delete-vm | stop vm
  community.libvirt.virt:
    name: "{{ vm.name }}"
    state: shutdown
  failed_when: false
  become: yes

- name: ansible-virtualization-guest | run vms
  ansible.builtin.include_role:
    name: stackhpc.libvirt-vm
  vars:
    ansible_become: yes
    libvirt_vms:
      - state: absent
        name: "{{ vm.name }}"

- name: ansible-virtualization-guest | delete-vm | undefine vm
  ansible.builtin.command: "virsh undefine {{ vm.name }}"
  failed_when: false
  changed_when: false
  become: yes

- name: ansible-virtualization-guest | delete-vm | remove vm image
  ansible.builtin.file:
    path: "/var/lib/libvirt/images/{{ vm.name }}.img"
    state: absent
  become: yes

- name: ansible-virtualization-guest | delete-vm | delete VM from facts
  ansible.builtin.replace:
    path: "{{ fact_path | default('/etc/ansible/facts.d') }}/ansible_virtualization_guest.fact"
    regexp: '{{ vm.name }}(,)?'
    replace: ''
  failed_when: false
  become: true

- name: ansible-virtualization-guest | network | reboot libvirtd # bug in firewalld
  ansible.builtin.service:
    name: libvirtd
    state: restarted
  changed_when: false
  failed_when: false
  become: true
